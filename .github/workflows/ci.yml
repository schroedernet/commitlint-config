jobs:
  lint:
    name: 'Lint'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v2'
        with:
          fetch-depth: '0'

      - name: 'Setup node'
        uses: 'actions/setup-node@v2-beta'

      - id: 'yarn-cache-dir-path'
        name: 'Get yarn cache directory path'
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'

      - name: 'Setup yarn cache'
        uses: 'actions/cache@v2'
        with:
          key: '${{ runner.os }}-yarn-${{ hashFiles(''**/yarn.lock'') }}'
          path: '${{ steps.yarn-cache-dir-path.outputs.dir }}'
          restore-keys: '${{ runner.os }}-yarn-'

      - name: 'Install dependencies'
        run: 'yarn install --frozen-lockfile --prefer-offline'

      - name: 'Setup lint cache'
        uses: 'actions/cache@v2'
        with:
          key: 'schema-${{ hashFiles(''package.json'') }}'
          path: 'tmp/lint'
          restore-keys: 'schema-'

      - name: 'Run linters'
        run: 'yarn run lint'
    timeout-minutes: 10

  release:
    name: 'Release'
    needs: 'test'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v2'

      - name: 'Setup node'
        uses: 'actions/setup-node@v2-beta'

      - id: 'yarn-cache-dir-path'
        name: 'Get yarn cache directory path'
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'

      - name: 'Setup yarn cache'
        uses: 'actions/cache@v2'
        with:
          key: '${{ runner.os }}-yarn-${{ hashFiles(''**/yarn.lock'') }}'
          path: '${{ steps.yarn-cache-dir-path.outputs.dir }}'
          restore-keys: '${{ runner.os }}-yarn-'

      - name: 'Install dependencies'
        run: 'yarn install --frozen-lockfile --prefer-offline'

      - env:
          GH_TOKEN: '${{ secrets.GH_TOKEN }}'
        name: 'Semantic release'
        run: 'yarn run semantic-release'

  test:
    name: 'Test'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout code'
        uses: 'actions/checkout@v2'

      - name: 'Setup node'
        uses: 'actions/setup-node@v2-beta'

      - id: 'yarn-cache-dir-path'
        name: 'Get yarn cache directory path'
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'

      - name: 'Setup yarn cache'
        uses: 'actions/cache@v2'
        with:
          key: '${{ runner.os }}-yarn-${{ hashFiles(''**/yarn.lock'') }}'
          path: '${{ steps.yarn-cache-dir-path.outputs.dir }}'
          restore-keys: '${{ runner.os }}-yarn-'

      - name: 'Install dependencies'
        run: 'yarn install --frozen-lockfile --prefer-offline'

      - name: 'Setup test cache'
        uses: 'actions/cache@v2'
        with:
          key: 'master'
          path: 'tmp/test'

      - name: 'Move old test cache'
        run: '{test -d tmp/test && mv tmp/test tmp/test.old} || true'

      - name: 'Run tests'
        run: 'yarn run test'

      - if: '${{github.event_name == ''pull_request''}}'
        name: 'Coverage reporter'
        uses: 'romeovs/lcov-reporter-action@v0.2.17'
        with:
          github-token: '${{secrets.GITHUB_TOKEN}}'
          lcov-base: 'tmp/test.old/reports/coverage/lcov.info'
          lcov-file: 'tmp/test/reports/coverage/lcov.info'

      - if: '${{github.event_name != ''push'' || github.event.ref != ''refs/heads/master''}}'
        name: 'Prevent test cache'
        run: 'mv tmp/test tmp/test.do-not-cache'

on: ['pull_request', 'push']
